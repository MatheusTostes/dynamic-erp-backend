{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"AuthResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"properties": {
							"token": {
								"type": "string"
							},
							"user": {
								"properties": {
									"name": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"id": {
										"type": "string"
									}
								},
								"required": [
									"name",
									"email",
									"id"
								],
								"type": "object"
							}
						},
						"required": [
							"token",
							"user"
						],
						"type": "object"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"AuthCredentials": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": true
			},
			"EntityField": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"String",
							"Number",
							"Date",
							"Boolean",
							"ObjectId"
						]
					},
					"required": {
						"type": "boolean"
					},
					"reference": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"type",
					"required"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Entity": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"group": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"fields": {
						"items": {
							"$ref": "#/components/schemas/EntityField"
						},
						"type": "array"
					},
					"createdBy": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"displayName",
					"group",
					"fields"
				],
				"type": "object",
				"additionalProperties": true
			},
			"EntityResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Entity"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateEntityResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Entity"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UniqueEntityResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Entity"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"EntityGroup": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"displayName"
				],
				"type": "object",
				"additionalProperties": true
			},
			"EntityGroupResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EntityGroup"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateGroupResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityGroup"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UniqueGroupResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EntityGroup"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Partial_EntityGroup_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Record": {
				"properties": {},
				"type": "object",
				"additionalProperties": {}
			},
			"RecordResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"$ref": "#/components/schemas/Record"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"PaginatedRecordResponse": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/RecordResponse"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					},
					"pagination": {
						"properties": {
							"hasPreviousPage": {
								"type": "boolean"
							},
							"hasNextPage": {
								"type": "boolean"
							},
							"totalPages": {
								"type": "number",
								"format": "double"
							},
							"pageSize": {
								"type": "number",
								"format": "double"
							},
							"page": {
								"type": "number",
								"format": "double"
							},
							"total": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"hasPreviousPage",
							"hasNextPage",
							"totalPages",
							"pageSize",
							"page",
							"total"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"pagination"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateRecordResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UniqueRecordResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"PaginatedUserResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Omit_User.password_"
						},
						"type": "array"
					},
					"pagination": {
						"properties": {
							"hasPreviousPage": {
								"type": "boolean"
							},
							"hasNextPage": {
								"type": "boolean"
							},
							"totalPages": {
								"type": "number",
								"format": "double"
							},
							"pageSize": {
								"type": "number",
								"format": "double"
							},
							"page": {
								"type": "number",
								"format": "double"
							},
							"total": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"hasPreviousPage",
							"hasNextPage",
							"totalPages",
							"pageSize",
							"page",
							"total"
						],
						"type": "object"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UniqueUserResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_User.password_"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateUserResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_User.password_"
							}
						],
						"nullable": true
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": true
			},
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"email",
					"password",
					"name"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthCredentials"
							}
						}
					}
				}
			}
		},
		"/entities": {
			"get": {
				"operationId": "GetEntities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EntityResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Entities"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateEntityResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"409": {
						"description": "Entity already exists"
					}
				},
				"tags": [
					"Entities"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Entity"
							}
						}
					}
				}
			}
		},
		"/entities/{entityId}": {
			"put": {
				"operationId": "UpdateEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueEntityResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Entities"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Entity"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEntity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueEntityResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Entities"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entity-groups": {
			"get": {
				"operationId": "GetGroups",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EntityGroupResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Groups"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateGroupResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"409": {
						"description": "Entity group already exists"
					}
				},
				"tags": [
					"Groups"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EntityGroup"
							}
						}
					}
				}
			}
		},
		"/entity-groups/{groupId}": {
			"put": {
				"operationId": "UpdateGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CreateGroupResponse"
										},
										{
											"$ref": "#/components/schemas/UniqueGroupResponse"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Groups"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_EntityGroup_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteGroup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueGroupResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Groups"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "groupId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/entities/{entityName}/records": {
			"get": {
				"operationId": "GetRecords",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedRecordResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Records"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "paginationPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "paginationSize",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "filters",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "referencedBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateRecord",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateRecordResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"409": {
						"description": "Record already exists"
					}
				},
				"tags": [
					"Records"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Record"
							}
						}
					}
				}
			}
		},
		"/entities/{entityName}/records/{recordId}": {
			"put": {
				"operationId": "UpdateRecord",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueRecordResponse"
								}
							}
						}
					},
					"404": {
						"description": "Record not found"
					}
				},
				"tags": [
					"Records"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "recordId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Record"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteRecord",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueRecordResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Records"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "entityName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "recordId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedUserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateUserResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"409": {
						"description": "User already exists"
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueUserResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueUserResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UniqueUserResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found"
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}